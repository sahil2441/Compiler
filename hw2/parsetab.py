
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '67BA7FF1EB52F0E5746B953002FE1901'
    
_lr_action_items = {'RSQUARE':([32,],[33,]),'SEMICOLON':([24,26,31,34,],[28,-17,-18,-19,]),'RCURLY':([4,7,8,12,17,23,27,28,],[-20,20,-4,-3,-5,-20,30,-12,]),'INT':([4,6,9,10,11,12,21,22,23,],[-20,15,-6,-8,-7,-11,-9,-10,-20,]),'FLOAT':([4,6,9,10,11,12,21,22,23,],[-20,16,-6,-8,-7,-11,-9,-10,-20,]),'PRIVATE':([4,23,],[11,11,]),'PUBLIC':([4,23,],[9,9,]),'LCURLY':([3,13,],[4,23,]),'BOOLEAN':([4,6,9,10,11,12,21,22,23,],[-20,18,-6,-8,-7,-11,-9,-10,-20,]),'EXTENDS':([3,],[5,]),'LSQUARE':([29,],[32,]),'STATIC':([4,9,11,23,],[10,21,22,10,]),'IDENTIFIER':([1,4,5,6,9,10,11,12,14,15,16,18,19,21,22,23,25,29,33,],[3,-20,13,14,-6,-8,-7,-11,-16,-13,-14,-15,26,-9,-10,-20,29,26,26,]),'CLASS':([0,],[1,]),'COMMA':([14,15,16,18,19,29,33,],[-16,-13,-14,-15,25,25,25,]),'$end':([2,20,30,],[0,-1,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'classdecl':([0,],[2,]),'field_decl':([4,23,],[8,8,]),'variables':([19,29,33,],[24,31,34,]),'var_decl':([6,],[17,]),'modifier':([4,23,],[6,6,]),'type':([6,],[19,]),'empty':([4,23,],[12,12,]),'class_body_decl':([4,23,],[7,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> classdecl","S'",1,None,None,None),
  ('classdecl -> CLASS IDENTIFIER LCURLY class_body_decl RCURLY','classdecl',5,'p_classdecl','decafparser.py',24),
  ('classdecl -> CLASS IDENTIFIER EXTENDS IDENTIFIER LCURLY class_body_decl RCURLY','classdecl',7,'p_classdecl','decafparser.py',25),
  ('class_body_decl -> empty','class_body_decl',1,'p_class_body_decl','decafparser.py',28),
  ('class_body_decl -> field_decl','class_body_decl',1,'p_class_body_decl','decafparser.py',29),
  ('field_decl -> modifier var_decl','field_decl',2,'p_field_decl','decafparser.py',35),
  ('modifier -> PUBLIC','modifier',1,'p_modifier','decafparser.py',38),
  ('modifier -> PRIVATE','modifier',1,'p_modifier','decafparser.py',39),
  ('modifier -> STATIC','modifier',1,'p_modifier','decafparser.py',40),
  ('modifier -> PUBLIC STATIC','modifier',2,'p_modifier','decafparser.py',41),
  ('modifier -> PRIVATE STATIC','modifier',2,'p_modifier','decafparser.py',42),
  ('modifier -> empty','modifier',1,'p_modifier','decafparser.py',43),
  ('var_decl -> type variables SEMICOLON','var_decl',3,'p_var_decl','decafparser.py',46),
  ('type -> INT','type',1,'p_type','decafparser.py',49),
  ('type -> FLOAT','type',1,'p_type','decafparser.py',50),
  ('type -> BOOLEAN','type',1,'p_type','decafparser.py',51),
  ('type -> IDENTIFIER','type',1,'p_type','decafparser.py',52),
  ('variables -> IDENTIFIER','variables',1,'p_variables','decafparser.py',55),
  ('variables -> COMMA IDENTIFIER variables','variables',3,'p_variables','decafparser.py',56),
  ('variables -> COMMA IDENTIFIER LSQUARE RSQUARE variables','variables',5,'p_variables','decafparser.py',57),
  ('empty -> <empty>','empty',0,'p_empty','decafparser.py',193),
]
